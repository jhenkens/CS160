As far as I know, project works correctly. I had some problems with the comparator for Lt, Lte, Gt, Gte. What seemed to make sense was apparently backwards, so I commented out the 'sensical' line, and placed the working, non-sensical line.
I saved four registers in the Callee to be proper x86 calling conventions.

I implemented as much code folding as I could see, even going so far as to change sample code and 'proper' code in constantfolding.cpp to avoid false TOPs. PLEASE, if there are problems with these folding changes, you can build everything by passing in flags to make.

Edit: I notice now that my folding is, infact, non-ideal. I could improve the constant folding of binary operations by removing the need to move a constant variable to either eax or ebx if one half of the equation is constant. This would save 1 operation per partially foldable expression.

To build with my testing comments in the asm code, type `make CPPFLAGS="-DTESTING"`.
To build with folding disabled entirely, type `make CPPFLAGS="-DNOFOLDING"`.
To build with both testing comments and no folding, type `make CPPFLAGS="-DTESTING -DNOFOLDING"`.
Note that these commands require a make clean before, as make will not rebuild the executable if all you are doing is changing the parameters to g++.
